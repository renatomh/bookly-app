"""add book tags table

Revision ID: 36d1a608bc17
Revises: 82fa2ff4a6f9
Create Date: 2024-11-28 09:59:19.305904

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "36d1a608bc17"
down_revision: Union[str, None] = "82fa2ff4a6f9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tags",
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_table(
        "booktag",
        sa.Column("book_uid", sa.Uuid(), nullable=False),
        sa.Column("tag_uid", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_uid"],
            ["books.uid"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_uid"],
            ["tags.uid"],
        ),
        sa.PrimaryKeyConstraint("book_uid", "tag_uid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("booktag")
    op.drop_table("tags")
    # ### end Alembic commands ###
